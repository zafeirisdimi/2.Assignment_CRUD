@model Assignment2.Models.Student

<div class="popover-header">
    <h1 class="display-4">Create Student </h1>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal border-top border-bottom border-secondary">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">
            <div class="form-group col-5">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-5">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-5">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-5">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-5">
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-5">
                @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-5">
                @Html.LabelFor(model => model.PhotoUrl, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.PhotoUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhotoUrl, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-5">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label " })
                @Html.EnumDropDownListFor(model => model.Country, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input class="btn btn-primary mb-2" type="submit" name="create" value="Create" />
                <input class="btn btn-danger mb-2" type="reset" name="clear" value="Clear" />
            </div>
        </div>
    </div>
}
<br />
<div>
    <a href="/Student/" class="btn btn-sm btn-secondary" target="_self" title=" BACK">Back </a>
</div>
