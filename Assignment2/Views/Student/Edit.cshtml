@model Assignment2.Models.Student

<div class="popover-header">
    <h1>@Model.LastName's profile Edit </h1>
</div>
<br />
<form class="form-check" action="" method="post">
    @Html.AntiForgeryToken()
    <br />
    <div class="form-row">
        <div class="form-group col-5">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your firstname", Type = "string" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-5">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your lastname", Type = "string" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-5">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your email", Type = "string" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-5">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your phone", Type = "string" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-5">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your salary", Type = "number" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-5">
            @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control", Type = "string" } })
            @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-5">
            @Html.LabelFor(model => model.PhotoUrl, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PhotoUrl, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your photo url", Type = "string" } })
            @Html.ValidationMessageFor(model => model.PhotoUrl, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-5">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Country, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-5">
            <label for="studentId" class="form-check-label"> Teacher:</label>
            <select name="studentId" class="form-control col-8">

                @foreach (var trainer in Model.Trainers)
                {
                    if (trainer.Id == Model.Id)
                    {
                        <option selected value="@trainer.Id">@trainer.FirstName @trainer.LastName</option>
                    }
                    else
                    {
                        <option selected value="@trainer.Id">@trainer.FirstName @trainer.LastName</option>
                    }

                }
                <option value="value">text</option>
            </select>
        </div>
        <div class="form-row">
            <div class="form-group">
                <input class="btn btn-primary mb-2" type="submit" name="name" value="Update" />
                <input class="btn btn-danger mb-2" type="reset" name="name" value="Clear" />
            </div>
        </div>
    </div>
</form>
<div>
    @Html.ActionLink("Go back", "Index", null, new { @class = "btn btn-sm btn-secondary" })
</div>

