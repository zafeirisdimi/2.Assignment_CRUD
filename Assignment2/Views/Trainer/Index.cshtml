@model PagedList.IPagedList<Assignment2.Models.Trainer>
@using Assignment2.Models.Enum
@using PagedList
@using PagedList.Mvc

<div class=" bg-transparent">
    <h1 class="display-4">Our Available Trainers</h1>
</div>
<hr/>
@if (TempData["message"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times</a>
        <strong>Success!</strong>@TempData["message"]
    </div>
}
<br />
<div>
    <a href="/Trainer/Create" class="btn btn-success col-md-2" target="_self" title="Add new Trainer in your list"><i class="fa-solid fa-plus"></i> Add new Teacher</a>
</div>
<div>
    <button id="filtersBtn" class="btn col-md-2 btn-sm"><i class="fa-regular fa-square-caret-down fa-xl"></i>&nbsp;&nbsp; Show Filters</button>
</div>
<div id="filters" class="form-group align-content-sm-center">
    <form class="form-row p-1">

        @{
            var countries = Enum.GetNames(typeof(Country));
        }

        <select name="searchCountry" class="form-control col-2 custom-select">
            @if (ViewBag.currentCountry == null)
            {
                <option value="">All</option>
                foreach (var country in countries)
                {

                    <option>@country</option>
                }
            }
            else
            {
                <option value="">All</option>
                foreach (var country in countries)
                {
                    if (country == ViewBag.currentCountry)
                    {
                        <option selected>@country</option>
                    }
                    else
                    {
                        <option>@country</option>
                    }
                }

            }
        </select>
        <input class="form-control col-1" type="number" name="searchMin" value="@(ViewBag.currentSalaryMin is null ? ViewBag.MinSalary : ViewBag.currentSalaryMin)" placeholder="Set min salary" min="@ViewBag.MinSalary" max="@ViewBag.MaxSalary" />
        <input class="form-control col-1" type="number" name="searchMin" value="@(ViewBag.currentSalaryMax is null ? ViewBag.MaxSalary : ViewBag.currentSalaryMax)" placeholder="Set max salary" min="@ViewBag.MinSalary" max="@ViewBag.MaxSalary" />

        <input class="form-control col-2" type="text" name="searchFirstName" value="@ViewBag.currentFirstName" placeholder="Search First Name" />
        <input class="btn btn-primary btn-group-sm" type="submit" name="name" value="Search Trainer" />
    </form>
</div>
@if (Model.Count == 0)
{

    <div>
        <h1 class="alert bg-danger text-black-50"><i class="fa-solid fa-circle-xmark fa-xl"></i>No Trainer exist</h1>
    </div>
}
else
{
    <div>
        <br />
        <div class="pagination-lg float-left"><strong>Page @(Model.PageCount<Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount)</strong></div>
        <div class="bg-transparent text-secondary text-end float-right">
            <p>Total records:<strong> @Model.Count()</strong></p>
        </div>
        <br />
        <table class="table table-hover table-light container-fluid text-center">
            <thead class="thead-dark ">
                <tr>
                    <th>@Html.ActionLink("#", "Index", "Trainer", new { sortOrder = ViewBag.IdSortParam }, null)</th>
                    <th><i class="fa-solid fa-file-image img-thumbnail"></i></th>
                    <th>@Html.ActionLink("FirstName", "Index", "Trainer", new { sortOrder = ViewBag.FirstNameSortParam, searchFirstName = ViewBag.currentFirstName, searchCountry = ViewBag.currentCountry, searchSalaryMin = ViewBag.currentSalaryMin, searchSalaryMax = ViewBag.currentSalaryMax }, null)</th>
                    <th>@Html.ActionLink("LastName", "Index", "Trainer", new { sortOrder = ViewBag.LastNameSortParam }, null)</th>
                    <th><i class="fa-solid fa-mobile-screen"></i></th>
                    <th>@Html.ActionLink("Salary", "Index", "Trainer", new { sortOrder = ViewBag.SalarySortParam }, null)</th>
                    <th><i class="fa-solid fa-envelope"></i></th>
                    <th>@Html.ActionLink("Country", "Index", "Trainer", new { sortOrder = ViewBag.CountrySortParam }, null)</th>
                    <th>@Html.ActionLink("HireDate", "Index", "Trainer", new { sortOrder = ViewBag.HireDateSortParam }, null)</th>
                    <th>@Html.ActionLink("Student", "Index", "Trainer", new { sortOrder = ViewBag.StudentSortParam }, null)</th>
                    <th>@Html.ActionLink("Course", "Index", "Trainer", new { sortOrder = ViewBag.CourseSortParam }, null)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trainer in Model)
                {
                    <tr>
                        <td class="align-middle">@trainer.Id</td>
                        <td class="align-middle"><img src="@trainer.PhotoUrl" width="30" alt="@trainer.FirstName+''+@trainer.LastName" /></td>
                        <td class="align-middle">@trainer.FirstName</td>
                        <td class="align-middle">@trainer.LastName</td>
                        <td class="align-middle">@trainer.Phone</td>
                        <td class="align-middle">@trainer.Salary</td>
                        <td class="align-middle">@trainer.Email</td>
                        <td class="align-middle">@trainer.Country</td>
                        <td class="align-middle">@trainer.HireDate.ToString("yyyy/MM/dd")</td>
                        <td class="align-middle">
                            <ul class="small list-unstyled">
                                <li>@trainer.Student.FirstName @trainer.Student.LastName</li>
                            </ul>
                        </td>
                        <td>
                            <ul class="small list-unstyled">
                                @foreach (var course in trainer.Courses)
                                {
                                    <li class="small text-sm-center">@course.Title</li>
                                }
                            </ul>
                        </td>
                        <td class="align-middle">
                            <div class="btn-group">
                                <div class="p-sm-1">
                                    <a href="/trainer/Details?id=@trainer.Id" class="btn btn-info btn-sm" title="Details"><i class="fa-solid fa-info"></i></a>
                                </div>
                                <div class="p-sm-1">
                                    <a href="/trainer/Edit?id=@trainer.Id" class="btn btn-warning btn-sm" title="Edit"><i class="fa-solid fa-pen-to-square"></i></a>
                                </div>
                                <div class="p-sm-1">
                                    <form action="/trainer/delete" method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@trainer.Id" />
                                        <input class="btn btn-danger btn-sm" type="submit" title="Delete"value="Delete" />
                                    </form>
                                </div>
                            </div>
                    </tr>
                }
            </tbody>
        </table>
        <div class="pagination-lg font-weight-bold">
            @Html.PagedListPager(Model, x => Url.Action("Index", "Trainer", new { page = x, pSize = 5 }), PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
        <div></div>
        @Html.ActionLink("Go back", "Index", "Home", null, new { @class = "btn btn-sm btn-secondary" })
    </div>

}


@section scripts{
    <script>

        $(document).ready(function () {

            $("#filters").hide();

            $("#filtersBtn").click(filterHandler);

            function filterHandler() {
                $("#filters").toggle(500);
                let keimeno = $("#filtersBtn").text();

                $("#filtersBtn").text(keimeno == "Show Filters" ? "Hide Filters" : "Show Filters");
                $("#filtersBtn").addClass("btn-outline-light");

            }

        })
    </script>
}